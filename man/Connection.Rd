% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scidb.R
\name{Connection}
\alias{Connection}
\title{R6 Class representing database connection}
\description{
R6 Class representing database connection

R6 Class representing database connection
}
\details{
Provides standardized database connection API plus app-specific functions
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{.private}}{Obtain reference to \code{private} for object}

\item{\code{rvlEnv}}{Obtain \emph{copy} of revealcore environment}

\item{\code{username}}{database user}

\item{\code{host}}{database host}

\item{\code{port}}{database port}

\item{\code{protocol}}{database protocol}

\item{\code{db}}{scidb database connection}

\item{\code{use_test_namespace}}{?}

\item{\code{scidb_ce}}{community edition?}

\item{\code{scidb_version}}{scidb version}

\item{\code{aop_connection}}{array-op connection}

\item{\code{roles}}{active database roles}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Connection$new()}}
\item \href{#method-print}{\code{Connection$print()}}
\item \href{#method-with_connection}{\code{Connection$with_connection()}}
\item \href{#method-transaction}{\code{Connection$transaction()}}
\item \href{#method-query}{\code{Connection$query()}}
\item \href{#method-cached_afl_expr}{\code{Connection$cached_afl_expr()}}
\item \href{#method-get_entity}{\code{Connection$get_entity()}}
\item \href{#method-get_entity_names}{\code{Connection$get_entity_names()}}
\item \href{#method-get_entity_id}{\code{Connection$get_entity_id()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize connection
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connection$new(
  username = NULL,
  password = NULL,
  host = "127.0.0.1",
  port = 8083,
  protocol = "https",
  result_size_limit = 2 * 1048,
  use_test_namespace = FALSE,
  multi_connection_environment = TRUE,
  ...,
  disable_transactions = TRUE,
  store_token = FALSE,
  schema_path = system.file("extdata", "SCHEMA.yml", package = getPackageName())
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{username}}{user name}

\item{\code{password}}{user password}

\item{\code{host}}{host to connect to}

\item{\code{port}}{port to connect to}

\item{\code{protocol}}{connection protocol (e.g., "https")}

\item{\code{result_size_limit}}{maximum size of database result}

\item{\code{use_test_namespace}}{?}

\item{\code{multi_connection_environment}}{if FALSE, store connection in reveal env}

\item{\code{...}}{ignored}

\item{\code{disable_transactions}}{If set, do not run \code{begin()}, \code{commit()}, \code{rollback()}}

\item{\code{store_token}}{Store password info}

\item{\code{schema_path}}{Path to schema file (defaults to package-level 'extdata/SCHEMA.yml')}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Print connection object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connection$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-with_connection"></a>}}
\if{latex}{\out{\hypertarget{method-with_connection}{}}}
\subsection{Method \code{with_connection()}}{
Run R code with aop_connection, db and roles set in environment
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connection$with_connection(code_block)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{code_block}}{code to run}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-transaction"></a>}}
\if{latex}{\out{\hypertarget{method-transaction}{}}}
\subsection{Method \code{transaction()}}{
Run R code in a single scidb transaction, with aop_connection, db and roles
set in environment. Transactions are rolled back if errors occur at the database
level, as well as in R code.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connection$transaction(code_block)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{code_block}}{code to run}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-query"></a>}}
\if{latex}{\out{\hypertarget{method-query}{}}}
\subsection{Method \code{query()}}{
Run query (delegated to \code{self$aop_connection$query()})
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connection$query(afl_str)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{afl_str}}{Query string}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
data.frame with query result
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cached_afl_expr"></a>}}
\if{latex}{\out{\hypertarget{method-cached_afl_expr}{}}}
\subsection{Method \code{cached_afl_expr()}}{
Cached \code{afl_expr()}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connection$cached_afl_expr(afl_str, key = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{afl_str}}{Query string}

\item{\code{key}}{Key to store expression by}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
data.frame with query result
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_entity"></a>}}
\if{latex}{\out{\hypertarget{method-get_entity}{}}}
\subsection{Method \code{get_entity()}}{
Get entity, optionally filtered by id(s)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connection$get_entity(entitynm)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entitynm}}{Entity name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
arrayop query on entity, optionally semi_joined on id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_entity_names"></a>}}
\if{latex}{\out{\hypertarget{method-get_entity_names}{}}}
\subsection{Method \code{get_entity_names()}}{
Get entity names
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connection$get_entity_names(data_class = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_class}}{data class to filter by}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
character vector containing names of available entities
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_entity_id"></a>}}
\if{latex}{\out{\hypertarget{method-get_entity_id}{}}}
\subsection{Method \code{get_entity_id()}}{
Get entity id from name
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connection$get_entity_id(entitynm)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entitynm}}{one or more entity names to obtain IDs for}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
integer vector containing IDs of provided entities
}
}
}
